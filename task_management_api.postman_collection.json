{
	"info": {
		"_postman_id": "ec22065a-f5e8-4a6c-a30d-22003ed1ffc9",
		"name": "Task Management API",
		"description": "API documentation for managing tasks and others",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21294548"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "register",
					"item": [
						{
							"name": "register user successully",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"",
											"// set usrname as variable",
											"pm.environment.set(\"username\", response.username);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"@\");",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"Pass@123\",\n  \"email\": \"{{$randomEmail}}\",\n  \"first_name\": \"{{$randomFirstName}}\",\n  \"last_name\": \"{{$randomLastName}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										""
									]
								}
							},
							"response": [
								{
									"name": "200 ok",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"Pass@123\",\n  \"email\": \"test-user@gmail.com\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/register/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"register",
												""
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 23 Jul 2025 14:32:06 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.9.6"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept, origin"
										},
										{
											"key": "Allow",
											"value": "POST, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Length",
											"value": "58"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"username\": \"Sydnie.Dach45\",\n    \"email\": \"test-user@gmail.com\"\n}"
								}
							]
						},
						{
							"name": "register already registered user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"// const jsonData = pm.response.json();",
											"",
											"",
											"// set usrname as variable",
											"pm.environment.set(\"username\", response.username);",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Existing username\", function () {",
											"    pm.expect(response.username).to.eql([",
											"        \"A user with that username already exists.\"",
											"    ]);",
											"});",
											"",
											"pm.test(\"Existing email\", function () {",
											"    pm.expect(response.email).to.eql([",
											"        \"A user with this email already exists.\"",
											"    ]);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"Nifemi23\",\n  \"password\": \"Pass@123\",\n  \"email\": \"nifemi@gmail.com\",\n  \"first_name\": \"Nifemi\",\n  \"last_name\": \"Doe\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										""
									]
								}
							},
							"response": [
								{
									"name": "200 ok",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"Pass@123\",\n  \"email\": \"test-user@gmail.com\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/register/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"register",
												""
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 23 Jul 2025 14:32:06 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.9.6"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept, origin"
										},
										{
											"key": "Allow",
											"value": "POST, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Length",
											"value": "58"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"username\": \"Sydnie.Dach45\",\n    \"email\": \"test-user@gmail.com\"\n}"
								}
							]
						},
						{
							"name": "Register with empty username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Empty username\", function () {\r",
											"    pm.expect(jsonData.username).to.eql(['This field may not be blank.']);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"\",\n  \"password\": \"Pass@123\",\n  \"email\": \"{{$randomEmail}}\",\n  \"first_name\": \"{{$randomUserName}}\",\n  \"last_name\": \"{{$randomLastName}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register with empty empty password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Empty password\", function () {\r",
											"    pm.expect(jsonData.password).to.eql(['This field may not be blank.']);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"\",\n  \"email\": \"{{$randomEmail}}\",\n  \"first_name\": \"{{$randomUserName}}\",\n  \"last_name\": \"{{$randomLastName}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register with short password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Empty password\", function () {\r",
											"    pm.expect(jsonData).to.eql(['Password must be at least 8 characters long.']);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"123\",\n  \"email\": \"{{$randomEmail}}\",\n  \"first_name\": \"{{$randomUserName}}\",\n  \"last_name\": \"{{$randomLastName}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register with invalid password (ALL numbers)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Empty password\", function () {\r",
											"    pm.expect(jsonData).to.eql(['Password must contain at least one letter.']);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"12345678\",\n  \"email\": \"{{$randomEmail}}\",\n  \"first_name\": \"{{$randomUserName}}\",\n  \"last_name\": \"{{$randomLastName}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register with invalid password (ALL letters)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Empty password\", function () {\r",
											"    pm.expect(jsonData).to.eql(['Password must contain at least one numeral.']);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"abcdefghij\",\n  \"email\": \"{{$randomEmail}}\",\n  \"first_name\": \"{{$randomUserName}}\",\n  \"last_name\": \"{{$randomLastName}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register with invalid password (Numbers and lowercase)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Empty password\", function () {\r",
											"    pm.expect(jsonData).to.eql(['Password must contain at least one uppercase letter.']);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"abcdef1234\",\n  \"email\": \"{{$randomEmail}}\",\n  \"first_name\": \"{{$randomUserName}}\",\n  \"last_name\": \"{{$randomLastName}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register with invalid password (Numbers, uppercase, and lowercase) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Empty password\", function () {\r",
											"    pm.expect(jsonData).to.eql(['Password must contain at least one special character.']);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"aBcdef1234\",\n  \"email\": \"{{$randomEmail}}\",\n  \"first_name\": \"{{$randomUserName}}\",\n  \"last_name\": \"{{$randomLastName}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register with empty email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Empty password\", function () {\r",
											"    pm.expect(jsonData.email).to.eql(['Enter a valid email address.']);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"Pass@123\",\n  \"email\": \"\",\n  \"first_name\": \"{{$randomUserName}}\",\n  \"last_name\": \"{{$randomLastName}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register with invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Empty password\", function () {\r",
											"    pm.expect(jsonData.email).to.eql(['Enter a valid email address.']);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"Pass@123\",\n  \"email\": \"nic.com\",\n  \"first_name\": \"{{$randomUserName}}\",\n  \"last_name\": \"{{$randomLastName}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register with empty firstname",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Empty password\", function () {\r",
											"    pm.expect(jsonData).to.eql(['First name and last name must be at least 2 characters long.']);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"Pass@123\",\n  \"email\": \"{{$randomEmail}}\",\n  \"first_name\": \"\",\n  \"last_name\": \"{{$randomLastName}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register with invalid firstname",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Empty password\", function () {\r",
											"    pm.expect(jsonData).to.eql([ \"First name and last name should only contain alphabetic characters.\"]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"Pass@123\",\n  \"email\": \"{{$randomEmail}}\",\n  \"first_name\": 1234,\n  \"last_name\": \"{{$randomLastName}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register with empty lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Empty password\", function () {\r",
											"    pm.expect(jsonData).to.eql([ \"First name and last name must be at least 2 characters long.\"]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"Pass@123\",\n  \"email\": \"{{$randomEmail}}\",\n  \"first_name\": 1234,\n  \"last_name\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register with invalid lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Empty password\", function () {\r",
											"    pm.expect(jsonData).to.eql([ \"First name and last name should only contain alphabetic characters.\"]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"Pass@123\",\n  \"email\": \"{{$randomEmail}}\",\n  \"first_name\": 1234,\n  \"last_name\": \"v@1234\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "login",
					"item": [
						{
							"name": "Login with empty username and password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"pm.environment.set(\"token\", response.access);",
											"",
											"//set refresh token",
											"pm.environment.set(\"refresh_token\", response.refresh);",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"Nifemi23\",\n    \"password\": \"Pass@123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login",
										""
									]
								}
							},
							"response": [
								{
									"name": "Access and refresh tokens",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"dolor enim\",\n  \"password\": \"laborum ad si\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access\": \"access_token_string\",\n  \"refresh\": \"refresh_token_string\"\n}"
								},
								{
									"name": "Invalid credentials",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"dolor enim\",\n  \"password\": \"laborum ad si\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"UdemeKey\",\n    \"password\": \"pass123\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 14 Jul 2025 15:27:56 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.9.6"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept"
										},
										{
											"key": "Allow",
											"value": "POST, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Length",
											"value": "483"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyNTEwNDc2LCJpYXQiOjE3NTI1MDY4NzYsImp0aSI6IjIzNjA3NGRjMDIyMDQwNjA5NmZlMWJlNDI5YWU4MmYxIiwidXNlcl9pZCI6M30.G8cdTnr1PAyrnz-FlIOhY4idCW1pkt9dsfy40E9nxNQ\",\n    \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzExMTY3NiwiaWF0IjoxNzUyNTA2ODc2LCJqdGkiOiJiMGRmZjk0YjUwYTE0YWM5YjdlYzkyMDM3NmI1YzNjYiIsInVzZXJfaWQiOjN9.ZfsMS51uvQBwKEE4P_CtAS0S5M_apIiXj24RibbEO6o\"\n}"
								}
							]
						},
						{
							"name": "Login with empty username and valid password Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"pm.environment.set(\"token\", response.access);",
											"",
											"//set refresh token",
											"pm.environment.set(\"refresh_token\", response.refresh);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"Pass@123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login",
										""
									]
								}
							},
							"response": [
								{
									"name": "Access and refresh tokens",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"dolor enim\",\n  \"password\": \"laborum ad si\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access\": \"access_token_string\",\n  \"refresh\": \"refresh_token_string\"\n}"
								},
								{
									"name": "Invalid credentials",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"dolor enim\",\n  \"password\": \"laborum ad si\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"UdemeKey\",\n    \"password\": \"pass123\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 14 Jul 2025 15:27:56 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.9.6"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept"
										},
										{
											"key": "Allow",
											"value": "POST, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Length",
											"value": "483"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyNTEwNDc2LCJpYXQiOjE3NTI1MDY4NzYsImp0aSI6IjIzNjA3NGRjMDIyMDQwNjA5NmZlMWJlNDI5YWU4MmYxIiwidXNlcl9pZCI6M30.G8cdTnr1PAyrnz-FlIOhY4idCW1pkt9dsfy40E9nxNQ\",\n    \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzExMTY3NiwiaWF0IjoxNzUyNTA2ODc2LCJqdGkiOiJiMGRmZjk0YjUwYTE0YWM5YjdlYzkyMDM3NmI1YzNjYiIsInVzZXJfaWQiOjN9.ZfsMS51uvQBwKEE4P_CtAS0S5M_apIiXj24RibbEO6o\"\n}"
								}
							]
						},
						{
							"name": "Login with valid username and empty password Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"pm.environment.set(\"token\", response.access);",
											"",
											"//set refresh token",
											"pm.environment.set(\"refresh_token\", response.refresh);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"Pass@123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login",
										""
									]
								}
							},
							"response": [
								{
									"name": "Access and refresh tokens",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"dolor enim\",\n  \"password\": \"laborum ad si\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access\": \"access_token_string\",\n  \"refresh\": \"refresh_token_string\"\n}"
								},
								{
									"name": "Invalid credentials",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"dolor enim\",\n  \"password\": \"laborum ad si\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"UdemeKey\",\n    \"password\": \"pass123\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 14 Jul 2025 15:27:56 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.9.6"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept"
										},
										{
											"key": "Allow",
											"value": "POST, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Length",
											"value": "483"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyNTEwNDc2LCJpYXQiOjE3NTI1MDY4NzYsImp0aSI6IjIzNjA3NGRjMDIyMDQwNjA5NmZlMWJlNDI5YWU4MmYxIiwidXNlcl9pZCI6M30.G8cdTnr1PAyrnz-FlIOhY4idCW1pkt9dsfy40E9nxNQ\",\n    \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzExMTY3NiwiaWF0IjoxNzUyNTA2ODc2LCJqdGkiOiJiMGRmZjk0YjUwYTE0YWM5YjdlYzkyMDM3NmI1YzNjYiIsInVzZXJfaWQiOjN9.ZfsMS51uvQBwKEE4P_CtAS0S5M_apIiXj24RibbEO6o\"\n}"
								}
							]
						},
						{
							"name": "Login with invalid password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"pm.environment.set(\"token\", response.access);",
											"",
											"//set refresh token",
											"pm.environment.set(\"refresh_token\", response.refresh);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"Pass@123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login",
										""
									]
								}
							},
							"response": [
								{
									"name": "Access and refresh tokens",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"dolor enim\",\n  \"password\": \"laborum ad si\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access\": \"access_token_string\",\n  \"refresh\": \"refresh_token_string\"\n}"
								},
								{
									"name": "Invalid credentials",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"dolor enim\",\n  \"password\": \"laborum ad si\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"UdemeKey\",\n    \"password\": \"pass123\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 14 Jul 2025 15:27:56 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.9.6"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept"
										},
										{
											"key": "Allow",
											"value": "POST, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Length",
											"value": "483"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyNTEwNDc2LCJpYXQiOjE3NTI1MDY4NzYsImp0aSI6IjIzNjA3NGRjMDIyMDQwNjA5NmZlMWJlNDI5YWU4MmYxIiwidXNlcl9pZCI6M30.G8cdTnr1PAyrnz-FlIOhY4idCW1pkt9dsfy40E9nxNQ\",\n    \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzExMTY3NiwiaWF0IjoxNzUyNTA2ODc2LCJqdGkiOiJiMGRmZjk0YjUwYTE0YWM5YjdlYzkyMDM3NmI1YzNjYiIsInVzZXJfaWQiOjN9.ZfsMS51uvQBwKEE4P_CtAS0S5M_apIiXj24RibbEO6o\"\n}"
								}
							]
						},
						{
							"name": "Login with invalid Username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"pm.environment.set(\"token\", response.access);",
											"",
											"//set refresh token",
											"pm.environment.set(\"refresh_token\", response.refresh);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"Pass@123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login",
										""
									]
								}
							},
							"response": [
								{
									"name": "Access and refresh tokens",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"dolor enim\",\n  \"password\": \"laborum ad si\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access\": \"access_token_string\",\n  \"refresh\": \"refresh_token_string\"\n}"
								},
								{
									"name": "Invalid credentials",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"dolor enim\",\n  \"password\": \"laborum ad si\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"UdemeKey\",\n    \"password\": \"pass123\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 14 Jul 2025 15:27:56 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.9.6"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept"
										},
										{
											"key": "Allow",
											"value": "POST, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Length",
											"value": "483"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyNTEwNDc2LCJpYXQiOjE3NTI1MDY4NzYsImp0aSI6IjIzNjA3NGRjMDIyMDQwNjA5NmZlMWJlNDI5YWU4MmYxIiwidXNlcl9pZCI6M30.G8cdTnr1PAyrnz-FlIOhY4idCW1pkt9dsfy40E9nxNQ\",\n    \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzExMTY3NiwiaWF0IjoxNzUyNTA2ODc2LCJqdGkiOiJiMGRmZjk0YjUwYTE0YWM5YjdlYzkyMDM3NmI1YzNjYiIsInVzZXJfaWQiOjN9.ZfsMS51uvQBwKEE4P_CtAS0S5M_apIiXj24RibbEO6o\"\n}"
								}
							]
						},
						{
							"name": "Login as a user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// const response = pm.response.json();",
											"// pm.environment.set(\"token\", response.access);",
											"",
											"// //set refresh token",
											"// pm.environment.set(\"refresh_token\", response.refresh);",
											"const body = pm.response.json();",
											"pm.environment.set(\"access_token\", body.access_token);",
											"pm.environment.set(\"refresh_token\", body.refresh_token);",
											"",
											"pm.test(\"Response time is less than 2000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"Nifemi23\",\n    \"password\": \"Pass@123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login",
										""
									]
								}
							},
							"response": [
								{
									"name": "Access and refresh tokens",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"dolor enim\",\n  \"password\": \"laborum ad si\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access\": \"access_token_string\",\n  \"refresh\": \"refresh_token_string\"\n}"
								},
								{
									"name": "Invalid credentials",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"dolor enim\",\n  \"password\": \"laborum ad si\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"UdemeKey\",\n    \"password\": \"pass123\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 14 Jul 2025 15:27:56 GMT"
										},
										{
											"key": "Server",
											"value": "WSGIServer/0.2 CPython/3.9.6"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept"
										},
										{
											"key": "Allow",
											"value": "POST, OPTIONS"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Length",
											"value": "483"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										}
									],
									"cookie": [],
									"body": "{\n    \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyNTEwNDc2LCJpYXQiOjE3NTI1MDY4NzYsImp0aSI6IjIzNjA3NGRjMDIyMDQwNjA5NmZlMWJlNDI5YWU4MmYxIiwidXNlcl9pZCI6M30.G8cdTnr1PAyrnz-FlIOhY4idCW1pkt9dsfy40E9nxNQ\",\n    \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzExMTY3NiwiaWF0IjoxNzUyNTA2ODc2LCJqdGkiOiJiMGRmZjk0YjUwYTE0YWM5YjdlYzkyMDM3NmI1YzNjYiIsInVzZXJfaWQiOjN9.ZfsMS51uvQBwKEE4P_CtAS0S5M_apIiXj24RibbEO6o\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "token",
					"item": [
						{
							"name": "refresh",
							"item": [
								{
									"name": "Refresh access token",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"refresh\": \"{{refresh_token}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/token/refresh/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"refresh",
												""
											]
										}
									},
									"response": [
										{
											"name": "New access token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"refresh\": \"your-refresh-token\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/auth/token/refresh/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"token",
														"refresh",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"access\": \"new-access-token\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "tasks",
			"item": [
				{
					"name": "get tasks list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								""
							]
						},
						"description": "Retrieve all tasks created by the authenticated user"
					},
					"response": [
						{
							"name": "get task list successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"title\": \"eiusmod consectetur\",\n    \"description\": \"Duis aute veniam proident\",\n    \"priority\": \"low\",\n    \"duration_in_hours\": 1650333048,\n    \"start_at\": \"1985-02-15T04:32:27.485Z\",\n    \"id\": 68044406,\n    \"user\": 26855124,\n    \"due_at\": \"1984-09-13T00:16:11.377Z\",\n    \"status\": \"qui veniam laborum\",\n    \"is_completed\": false,\n    \"completed_at\": \"1963-05-03T16:09:21.909Z\",\n    \"prompted\": true,\n    \"created_at\": \"1968-01-05T07:34:53.850Z\",\n    \"updated_at\": \"1977-06-30T23:15:27.965Z\"\n  },\n  {\n    \"title\": \"dolor ad\",\n    \"description\": \"sit tempor laborum et irur\",\n    \"priority\": \"low\",\n    \"duration_in_hours\": 140149852,\n    \"start_at\": \"1957-02-07T19:06:23.778Z\",\n    \"id\": -36074361,\n    \"user\": 4403372,\n    \"due_at\": \"1955-12-24T01:33:19.227Z\",\n    \"status\": \"dolore sit occaecat adipisicing\",\n    \"is_completed\": true,\n    \"completed_at\": \"2005-01-18T08:36:18.935Z\",\n    \"prompted\": true,\n    \"created_at\": \"2021-02-22T19:03:08.656Z\",\n    \"updated_at\": \"2006-03-30T16:14:56.906Z\"\n  }\n]"
						}
					]
				},
				{
					"name": "get task by id successfully",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/34",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"34"
							]
						},
						"description": "Retrieve a single task by ID belonging to the authenticated user."
					},
					"response": [
						{
							"name": "get task by id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "e9a286a1a2b9.ngrok-free.app/api/tasks/20",
									"host": [
										"e9a286a1a2b9",
										"ngrok-free",
										"app"
									],
									"path": [
										"api",
										"tasks",
										"20"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Allow",
									"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "Content-Length",
									"value": "335"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Date",
									"value": "Thu, 16 Oct 2025 12:06:07 GMT"
								},
								{
									"key": "Ngrok-Agent-Ips",
									"value": "102.88.115.176"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.6"
								},
								{
									"key": "Vary",
									"value": "Accept, origin"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 20,\n    \"user\": 9,\n    \"title\": \"Task 1\",\n    \"description\": \"Some task details\",\n    \"priority\": \"high\",\n    \"duration_in_hours\": 3,\n    \"start_at\": \"2025-10-16 10:30:00\",\n    \"due_at\": \"2025-10-16 13:30:00\",\n    \"status\": \"in_progress\",\n    \"is_completed\": false,\n    \"completed_at\": \"Not completed\",\n    \"prompted\": false,\n    \"created_at\": \"2025-10-16 09:23:35\",\n    \"updated_at\": \"2025-10-16 10:39:35\"\n}"
						}
					]
				},
				{
					"name": "get task by unregistered id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Unregistered\", function () {\r",
									"    pm.expect(jsonData.detail).to.eql('No Task matches the given query.');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"3"
							]
						},
						"description": "Retrieve a single task by ID belonging to the authenticated user."
					},
					"response": [
						{
							"name": "get task by id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "e9a286a1a2b9.ngrok-free.app/api/tasks/20",
									"host": [
										"e9a286a1a2b9",
										"ngrok-free",
										"app"
									],
									"path": [
										"api",
										"tasks",
										"20"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Allow",
									"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "Content-Length",
									"value": "335"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Date",
									"value": "Thu, 16 Oct 2025 12:06:07 GMT"
								},
								{
									"key": "Ngrok-Agent-Ips",
									"value": "102.88.115.176"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.6"
								},
								{
									"key": "Vary",
									"value": "Accept, origin"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 20,\n    \"user\": 9,\n    \"title\": \"Task 1\",\n    \"description\": \"Some task details\",\n    \"priority\": \"high\",\n    \"duration_in_hours\": 3,\n    \"start_at\": \"2025-10-16 10:30:00\",\n    \"due_at\": \"2025-10-16 13:30:00\",\n    \"status\": \"in_progress\",\n    \"is_completed\": false,\n    \"completed_at\": \"Not completed\",\n    \"prompted\": false,\n    \"created_at\": \"2025-10-16 09:23:35\",\n    \"updated_at\": \"2025-10-16 10:39:35\"\n}"
						}
					]
				},
				{
					"name": "create task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{$randomJobTitle}}\",\n  \"description\": \"{{$randomJobDescriptor}}\",\n  \"priority\": \"high\",\n  \"duration_in_hours\": 1,\n  \"start_at\": \"2025-10-23T13:33:00\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tasks/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								""
							]
						},
						"description": "Create a task. The 'due_at' field is automatically calculated from 'start_at' + 'duration_in_hours'."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"New Task\",\n  \"description\": \"Some task details\",\n  \"priority\": \"high\",\n  \"duration_in_hours\": 3,\n  \"start_at\": \"2025-07-13T10:00:00Z\",\n  \"is_completed\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tasks/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"title\": \"nisi f\",\n  \"description\": \"sint\",\n  \"priority\": \"high\",\n  \"duration_in_hours\": 1582108934,\n  \"start_at\": \"1957-01-20T17:17:06.510Z\",\n  \"id\": 84649748,\n  \"user\": 98067084,\n  \"due_at\": \"2008-09-05T12:20:14.529Z\",\n  \"status\": \"tempor labore veniam\",\n  \"is_completed\": true,\n  \"completed_at\": \"1992-01-08T10:46:38.505Z\",\n  \"prompted\": false,\n  \"created_at\": \"1978-11-17T21:24:10.486Z\",\n  \"updated_at\": \"1956-07-20T11:09:35.421Z\"\n}"
						}
					]
				},
				{
					"name": "tasks update",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Tas-20\",\n    \"description\": \"Test\",\n    \"priority\": \"medium\",\n    \"duration_in_hours\": 1,\n    \"start_at\": \"2025-07-23T20:00:00\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tasks/17",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"17"
							]
						},
						"description": "Retrieve, update, or delete a task belonging to the authenticated user."
					},
					"response": [
						{
							"name": "200 ok",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Tas-20\",\n    \"description\": \"Test\",\n    \"priority\": \"medium\",\n    \"duration_in_hours\": 1,\n    \"start_at\": \"2025-07-23T20:00:00\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tasks/17",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"17"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 23 Jul 2025 18:56:46 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.9.6"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, origin"
								},
								{
									"key": "Allow",
									"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "320"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 17,\n    \"user\": 5,\n    \"title\": \"Tas-20\",\n    \"description\": \"Test\",\n    \"priority\": \"medium\",\n    \"duration_in_hours\": 1,\n    \"start_at\": \"2025-07-23 20:00:00\",\n    \"due_at\": \"2025-07-23 21:00:00\",\n    \"status\": \"pending\",\n    \"is_completed\": false,\n    \"completed_at\": \"Not completed\",\n    \"prompted\": false,\n    \"created_at\": \"2025-07-23 18:52:33\",\n    \"updated_at\": \"2025-07-23 18:56:46\"\n}"
						}
					]
				},
				{
					"name": "tasks partial update",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"is_completed\": \"true\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tasks/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"1"
							]
						},
						"description": "Retrieve, update, or delete a task belonging to the authenticated user."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Excepteur\",\n  \"description\": \"officia culpa\",\n  \"priority\": \"medium\",\n  \"duration_in_hours\": 4054571895,\n  \"start_at\": \"1978-08-03T04:12:44.471Z\",\n  \"is_completed\": true,\n  \"prompted\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tasks/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":id",
										""
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"title\": \"nisi f\",\n  \"description\": \"sint\",\n  \"priority\": \"high\",\n  \"duration_in_hours\": 1582108934,\n  \"start_at\": \"1957-01-20T17:17:06.510Z\",\n  \"id\": 84649748,\n  \"user\": 98067084,\n  \"due_at\": \"2008-09-05T12:20:14.529Z\",\n  \"status\": \"tempor labore veniam\",\n  \"is_completed\": true,\n  \"completed_at\": \"1992-01-08T10:46:38.505Z\",\n  \"prompted\": false,\n  \"created_at\": \"1978-11-17T21:24:10.486Z\",\n  \"updated_at\": \"1956-07-20T11:09:35.421Z\"\n}"
						}
					]
				},
				{
					"name": "delete task by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"3"
							]
						},
						"description": "Retrieve, update, or delete a task belonging to the authenticated user."
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":id",
										""
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Health",
			"item": [
				{
					"name": "get api health status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "logout",
			"item": [
				{
					"name": "Logout a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// const jsonData = pm.response.json();\r",
									"// pm.test(\"Status code is 205\", function () {\r",
									"//     pm.response.to.have.status(205);\r",
									"// });\r",
									"\r",
									"// // pm.test(\"Response time is less than 1000ms\", function () {\r",
									"// //     pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"// // });\r",
									"\r",
									"// pm.test(\"logout message\", function () {\r",
									"//     pm.expect(jsonData.detail).to.eql(\"Logged out successfully\");\r",
									"// });\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/logout/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"logout",
								""
							]
						}
					},
					"response": [
						{
							"name": "Logged out successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"refresh\": \"{{refresh_token}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/logout/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"logout",
										""
									]
								}
							},
							"status": "Reset Content",
							"code": 205,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid refresh token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"refresh\": \"in Excepteur do\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/logout/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"logout",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://127.0.0.1:8000/api"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		}
	]
}